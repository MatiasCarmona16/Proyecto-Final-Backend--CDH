<header>
    <div class="container">
    <nav class="navbar p-5 mt-2">
        <div class="container-navbar">
            <div class="marca-nav">
                <a href="http://localhost:8080" class="navbar-brand">iPhone Store</a>
            </div>
            

            <div class="header-a">
            <a href="http://localhost:8080" class="btn-dec">Home</a>
            <a href="/productsview" class="btn-dec">iStore</a>
            {{#if userInfo}}
                        <p><a href="/auth/change-rol-user" class="btn-dec">Hi {{userInfo.first_name}}!</a></p>
                        <a id="deslog" href="/api/auth/logout" class="btn-dec">Logout</a>
                        <p>|</p>
                        <a href="/cart"><svg xmlns="http://www.w3.org/2000/svg" height="16" width="12.45" viewBox="0 0 448 512"><path d="M160 112c0-35.3 28.7-64 64-64s64 28.7 64 64v48H160V112zm-48 48H48c-26.5 0-48 21.5-48 48V416c0 53 43 96 96 96H352c53 0 96-43 96-96V208c0-26.5-21.5-48-48-48H336V112C336 50.1 285.9 0 224 0S112 50.1 112 112v48zm24 48a24 24 0 1 1 0 48 24 24 0 1 1 0-48zm152 24a24 24 0 1 1 48 0 24 24 0 1 1 -48 0z"/></svg></svg></a>
                    {{else}}
                        <a href="/auth/login-view" class="btn-dec">Login</a>
                        <a href="/auth/register-view" class="btn-dec">Register</a>
                    {{/if}}
            </div>

        </div>
    </nav>
    </div>
</header>


    <div class="container">

    <div class="img_portada">
    </div>

<div class="card-flex">
{{#each products.payload}}
<div class="card" style="width: 18rem;">
    <div class="img-container">
        <img src={{this.thumbnail}} class="card-img-top" alt="...">
    </div>
        <div class="card-body">
            <h5 class="card-title">{{this.title}}</h5>
            <hr>
            <p class="card-subtitle">USD {{this.price}}</p>
            <p class="card-text">{{this.description}}</p>
            <div class="d-flex justify-content-center">
                <button onclick="addToCart('{{this._id}}')" class="CartBtn">
                    <span class="IconContainer"> 
                        <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 576 512" fill="rgb(17, 17, 17)" class="cart"><path d="M0 24C0 10.7 10.7 0 24 0H69.5c22 0 41.5 12.8 50.6 32h411c26.3 0 45.5 25 38.6 50.4l-41 152.3c-8.5 31.4-37 53.3-69.5 53.3H170.7l5.4 28.5c2.2 11.3 12.1 19.5 23.6 19.5H488c13.3 0 24 10.7 24 24s-10.7 24-24 24H199.7c-34.6 0-64.3-24.6-70.7-58.5L77.4 54.5c-.7-3.8-4-6.5-7.9-6.5H24C10.7 48 0 37.3 0 24zM128 464a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm336-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z"></path></svg>
                    </span>
                <p class="text">Add to Cart</p>
                </button>
            </div>
    </div>
</div>
{{/each}}
</div>

{{#if products.hasNextPage}}
<div>
    <a href="{{products.nextLink}}">Siguiente</a>
</div>
{{/if}}

{{#if products.hasPrevPage}}
<div>
    <a href="{{products.prevLink}}">Anterior</a>
</div>
{{/if}}

</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
            const cards = document.querySelectorAll('.card');

            const observer = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('card-visible');
                        observer.unobserve(entry.target);
                    }
                });
            }, {
                threshold: 0.5
            });

            cards.forEach(card => {
                observer.observe(card);
            });
        });


    //Funcion agregar al carrito
async function addToCart(productId) {
    try {
    let cartId = localStorage.getItem("cartId");
    
    if (!cartId) {
        const response = await fetch("/api/cart/", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        }
    });
        const data = await response.json();
        localStorage.setItem("cartId", data._id);
        cartId = data._id;
    }

    const response = await fetch(`/api/cart/${cartId}/product/${productId}`, {
        method: "POST",
        headers: {
        "Content-Type": "application/json"
    },
    body: JSON.stringify({
        quantity: 1 
    })
    });

    if (!response.ok) {
        throw new Error("No se pudo agregar producto al Carrito");
    }

    const responseData = await response.json();
    console.log("Producto agregado con exito al carrito:", responseData);

    Toastify({

        text: `Product added to cart`,
        
        duration: 2200,
        gravity: "bottom",
        style: {
            background: "rgb(22,22,22)",
            background: "radial-gradient(circle, rgba(22,22,22,1) 18%, rgba(8,8,8,1) 86%)",
        },
        
        }).showToast();

    } catch (error) {
    console.error(error);
    }
}

document.getElementById('deslog').addEventListener('click',logout)
    function logout() {
        localStorage.removeItem('cartId');
    }
</script>

